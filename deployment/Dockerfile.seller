# Build stage
FROM node:20-alpine AS builder

# Install pnpm
RUN corepack enable && corepack prepare pnpm@latest --activate

WORKDIR /app

# Copy package files
COPY package.json pnpm-lock.yaml ./

# Install dependencies
RUN pnpm install --frozen-lockfile

# Copy source code
COPY . .

# Override vite config with seller-specific config
RUN echo "import path from 'path';\n\
import tailwindcss from '@tailwindcss/vite';\n\
import react from '@vitejs/plugin-react-swc';\n\
import { defineConfig } from 'vite';\n\
\n\
export default defineConfig(() => ({\n\
  base: '/seller/',\n\
  server: {\n\
    host: '::',\n\
    port: 8080,\n\
  },\n\
  plugins: [react(), tailwindcss()],\n\
  resolve: {\n\
    alias: {\n\
      '@': path.resolve(__dirname, './src'),\n\
    },\n\
  },\n\
  build: {\n\
    outDir: 'dist',\n\
    assetsDir: 'assets',\n\
    emptyOutDir: true,\n\
  },\n\
}));" > vite.config.ts

# Build the application with base path
RUN pnpm run build

# Production stage
FROM nginx:alpine

# Install curl for health checks
RUN apk add --no-cache curl

# Copy built files from builder
COPY --from=builder /app/dist /usr/share/nginx/html/seller

# Copy nginx configuration
COPY nginx-seller.conf /etc/nginx/conf.d/default.conf

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost/seller/ || exit 1

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]