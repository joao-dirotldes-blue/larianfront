version: '3.8'

services:
  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: larian-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/letsencrypt:ro
      - nginx_cache:/var/cache/nginx
    depends_on:
      - agency
      - seller
    networks:
      - larian-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

  # Agency Frontend
  agency:
    build:
      context: ../gufly-agency-front
      dockerfile: ../deployment/Dockerfile.agency
      args:
        - VITE_API_URL_BASE=${VITE_API_URL_BASE}
    container_name: larian-agency
    volumes:
      - ./nginx-agency.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - larian-network
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/agency/"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

  # Seller Frontend
  seller:
    build:
      context: ../gufly-seller-front
      dockerfile: ../deployment/Dockerfile.seller
      args:
        - VITE_API_URL_BASE=${VITE_API_URL_BASE}
    container_name: larian-seller
    volumes:
      - ./nginx-seller.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - larian-network
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/seller/"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

  # Certbot for SSL certificates (optional)
  certbot:
    image: certbot/certbot
    container_name: larian-certbot
    volumes:
      - ./ssl:/etc/letsencrypt
      - ./certbot-www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - larian-network
    profiles:
      - ssl

networks:
  larian-network:
    driver: bridge
    name: larian-network

volumes:
  nginx_cache:
    name: larian-nginx-cache